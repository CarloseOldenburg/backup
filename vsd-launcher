#!/bin/bash

# sudo wget -O /usr/bin/vsd-launcher https://raw.githubusercontent.com/CarloseOldenburg/updater/main/vsd-launcher && sudo chmod +x /usr/bin/vsd-launcher

# ========================
# CONFIGURAÇÃO
# ========================
VERSION="1.0"
LOG_FILE="/var/log/vsd-launcher.log"
SCRIPT_URL="https://raw.githubusercontent.com/CarloseOldenburg/updater/main/vsd-launcher"

# ========================
# CORES
# ========================
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# ========================
# FUNÇÕES DE LOG
# ========================
function log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') | $1" | sudo tee -a "$LOG_FILE" >/dev/null
}

function info() {
    log "[INFO] $1"
}

function warn() {
    log "[ATENÇÃO] $1"
}

function error() {
    log "[ERRO] $1"
}

# ========================
# CHECK DE ATUALIZAÇÃO
# ========================
function check_update() {
    remote_script=$(curl -s "$SCRIPT_URL")
    remote_version=$(echo "$remote_script" | grep "VERSION=" | head -1 | cut -d'"' -f2)

    if [[ -z "$remote_version" ]]; then
        warn "Não foi possível verificar a versão remota."
        whiptail --title "Atualização" --msgbox "Não foi possível verificar a versão remota." 10 60
        return
    fi

    if [[ "$remote_version" != "$VERSION" ]]; then
        warn "Nova versão disponível: $remote_version"
        if whiptail --title "Atualização Disponível" --yesno "Deseja atualizar o vsd-launcher para a versão $remote_version?" 10 60; then
            sudo curl -s -o /usr/bin/vsd-launcher "$SCRIPT_URL"
            sudo chmod +x /usr/bin/vsd-launcher
            info "Atualizado para versão $remote_version."
            whiptail --title "Atualização" --msgbox "Atualizado para versão $remote_version com sucesso." 10 60
            exit 0
        else
            warn "Atualização ignorada."
        fi
    else
        info "Você está na versão mais recente ($VERSION)."
        whiptail --title "Atualização" --msgbox "Você já está na versão mais recente ($VERSION)." 10 60
    fi
}

# ========================
# FUNÇÕES
# ========================
function clear_cache() {
    rm -rf ~/.cache/google-chrome/* ~/.config/google-chrome/*
    info "Cache do Google Chrome limpo."
    whiptail --title "Limpeza" --msgbox "Cache do Google Chrome limpo." 10 60
}

function clear_token() {
    clear_cache
    sudo rm -f /opt/videosoft/vs-os-interface/log/_database_token* 2>/dev/null
    sudo rm -f /opt/videosoft/vs-os-interface/log/_database_recovery* 2>/dev/null
    info "Token e arquivos de recuperação excluídos."
    whiptail --title "Limpeza" --msgbox "Token e arquivos de recuperação foram excluídos." 10 60
}

function update_url() {
    local service="$1"
    local version="$2"
    local homolog="$3"
    local new_url=""

    if [[ "$service" == "food" ]]; then
        if [[ "$version" == "2" ]]; then
            [[ "$homolog" == "true" ]] && new_url="https://food2.homolog.vsd.app" || new_url="https://food2.vsd.app"
        else
            [[ "$homolog" == "true" ]] && new_url="https://food.homolog.vsd.app" || new_url="https://food.vsd.app"
        fi
    elif [[ "$service" == "self" ]]; then
        [[ "$homolog" == "true" ]] && new_url="https://selfcheckout.homolog.vsd.app" || new_url="https://selfcheckout.vsd.app"
    else
        error "Serviço desconhecido."
        whiptail --title "Erro" --msgbox "Serviço desconhecido!" 10 60
        return 1
    fi

    sudo sed -i "s|^VS_URL_APP=.*|VS_URL_APP=\"$new_url\"|" /opt/videosoft/vs-food-launcher/app/vs-food.sh
    info "URL atualizada para: $new_url"
    whiptail --title "URL Atualizada" --msgbox "URL atualizada para: $new_url" 10 60
}

# ========================
# MENU DE ATUALIZAÇÃO DE URL
# ========================
function menu_update_url() {
    SERVICE=$(whiptail --title "Escolha o serviço" --menu "Selecione:" 15 50 2 \
        "food" "Sistema Food" \
        "self" "Selfcheckout" 3>&1 1>&2 2>&3)

    [[ -z "$SERVICE" ]] && return

    VERSION=$(whiptail --title "Escolha a versão" --menu "Versão (Food apenas):" 15 50 3 \
        "2" "Food 2.0" \
        "3" "Food 3.0 (Padrão)" \
        "none" "Não especificar" 3>&1 1>&2 2>&3)

    [[ "$VERSION" == "none" ]] && VERSION=""

    HOMOLOG=$(whiptail --title "Ambiente" --yesno "Usar ambiente de HOMOLOGAÇÃO?" 10 60 && echo "true" || echo "false")

    update_url "$SERVICE" "$VERSION" "$HOMOLOG"
}

# ========================
# DESINSTALAÇÃO
# ========================
function uninstall() {
    if whiptail --title "Desinstalar" --yesno "Deseja realmente desinstalar o vsd-launcher?" 10 60; then
        sudo rm -f /usr/bin/vsd-launcher
        sudo rm -f "$LOG_FILE"
        whiptail --title "Desinstalação" --msgbox "vsd-launcher foi desinstalado com sucesso." 10 60
        exit 0
    fi
}

# ========================
# MENU PRINCIPAL
# ========================
function menu() {
    while true; do
        OPTION=$(whiptail --title "VSD Launcher" --menu "Escolha uma opção:" 20 60 10 \
            "1" "Atualizar URL" \
            "2" "Limpar cache do Chrome" \
            "3" "Limpar token + cache" \
            "4" "Verificar atualizações" \
            "5" "Desinstalar vsd-launcher" \
            "6" "Sair" 3>&1 1>&2 2>&3)

        case $OPTION in
            1) menu_update_url ;;
            2) clear_cache ;;
            3) clear_token ;;
            4) check_update ;;
            5) uninstall ;;
            6) exit 0 ;;
            *) return ;;
        esac
    done
}

# ========================
# EXECUÇÃO
# ========================
sudo touch "$LOG_FILE"
sudo chmod 666 "$LOG_FILE"

menu
